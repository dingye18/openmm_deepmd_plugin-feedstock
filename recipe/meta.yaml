{% set name = "openmm_deepmd_plugin" %}
{% set version = "d818265" %}
{% set cuda_compiler_version = "11.6" %}
{% set dp_variant = "gpu" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  git_url: https://github.com/JingHuangLab/openmm_deepmd_plugin.git
  git_rev: d8182656dd948fb1df23f886a634b892f0dcd134
  patches:
    - cuda_platform.patch

build:
  number: 1
  string: "{{ PKG_BUILDNUM }}_cuda{{ cuda_compiler_version }}_dp.ba1d7c2" 
  skip: True  # [not linux]
  missing_dso_whitelist:
    - "*/libcuda.*"    # [linux64 or ppc64le]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - sysroot_linux-64 2.17 # [linux64]
    - cmake
    - make
    - swig
    - wget
    - unzip

  host:
    - cudatoolkit {{ cuda_compiler_version }}*
    - openmm
    - fftw
    - numpy
    - cython
    - swig
    - wget
    - unzip

  run: 
    - openmm
    - numpy

test:
  commands:
    - python -m openmm.testInstallation
    - test -f $PREFIX/lib/libOpenMM.so
    - test -f $PREFIX/lib/libOpenMMDeepmd.so
    - python -m OpenMMDeepmdPlugin.tests.test_dp_plugin_nve

about:
  home: https://github.com/JingHuangLab/openmm_deepmd_plugin
  summary: 'OpenMM Plugin for DeePMD-kit.'
  license: LGPL-3.0-or-later
  license_family: LGPL
  description: |
    OpenMM is a toolkit for molecular simulation. It can be used either as a
    stand-alone application for running simulations, or as a library you call
    from your own code. It provides a combination of extreme flexibility
    (through custom forces and integrators), openness, and high performance
    (especially on recent GPUs) that make it truly unique among simulation
    codes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL
    platforms).
  doc_url: http://docs.openmm.org
  dev_url: https://github.com/JingHuangLab/openmm_deepmd_plugin.git

extra:
  recipe-maintainers:
    - ye-ding
